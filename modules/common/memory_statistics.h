#ifndef _MEMORY_STATISTICS_H_
#define _MEMORY_STATISTICS_H_

#ifdef __cplusplus
extern "C" {
#endif

#include <string.h>
#include <zephyr.h>

enum memory_hook_statistics_id {
  HEAP_MEMORY_STATISTICS_ID_ANALYSIS_VAL_STRING,
  HEAP_MEMORY_STATISTICS_ID_CJSON,
  HEAP_MEMORY_STATISTICS_ID_CJSON_PREALLOC_STRING,
  HEAP_MEMORY_STATISTICS_ID_COMM_CTRL_DATA_TO_NRF9160,
  HEAP_MEMORY_STATISTICS_ID_COMM_CTRL_HEADER_STRING,
  HEAP_MEMORY_STATISTICS_ID_COMM_CTRL_HEATMAP_DATA,
  HEAP_MEMORY_STATISTICS_ID_COMM_CTRL_NULL_STRING,
  HEAP_MEMORY_STATISTICS_ID_DIAG_MEMFAULT_BASE64_DATA,
  HEAP_MEMORY_STATISTICS_ID_DIAG_MEMFAULT_DATA,
  HEAP_MEMORY_STATISTICS_ID_HTTPS_CLIENT_HEADER,
  HEAP_MEMORY_STATISTICS_ID_LODEPNG,
  HEAP_MEMORY_STATISTICS_ID_MCU_EXCHANGE_UART_RX,
  HEAP_MEMORY_STATISTICS_ID_SENSOR_HEATMAP_DATA,
  HEAP_MEMORY_STATISTICS_ID_SHELL_HEATMAP_DATA,
  HEAP_MEMORY_STATISTICS_ID_UTILS_COMPRESS_DATA,
  HEAP_MEMORY_STATISTICS_ID_UTILS_DECODED_BASE64,
  HEAP_MEMORY_STATISTICS_ID_UTILS_DYN_DATA,
  HEAP_MEMORY_STATISTICS_ID_UTILS_ENCODE_BASE64_MESSAGE,
  HEAP_MEMORY_STATISTICS_ID_UTILS_ENCODE_MESSAGE,
  HEAP_MEMORY_STATISTICS_ID_UTILS_HEATMAP_DATA,
  HEAP_MEMORY_STATISTICS_ID_EVENT_MANAGER,
  HEAP_MEMORY_STATISTICS_ID_MSG_DYNDATA,
  HEAP_MEMORY_STATISTICS_ID_FS_READ_BUFFER,
  HEAP_MEMORY_STATISTICS_ID_BLE_DATA,
};

struct memory_stat_list {
  sys_snode_t node;
  void* key;
  enum memory_hook_statistics_id id;
  uint16_t len;
};

size_t getMemoryPeakUsage();
size_t getMapPeakUsage();

uint16_t getMemoryStats(struct memory_stat_list** stats);
char* get_memory_stat_str(enum memory_hook_statistics_id id);

// here for testing in shell commands only
void mapPutStat(void* key, struct memory_stat_list stats);
void mapGetStat(void* key, struct memory_stat_list* stats);
void mapRemoveStat(void* key);

#ifdef __cplusplus
}
#endif

#endif /* _MEMORY_STATISTICS_H_ */
